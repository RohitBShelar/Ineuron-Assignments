PandasAssignment

Q1. How do you load a CSV file into a Pandas DataFrame?
Ans:
import pandas as pd
df = pd.read_csv('filename.csv')

Q2. How do you check the data type of a column in a Pandas DataFrame?
Ans:
We may use the following syntax to check the data type of all columns in Pandas DataFrame:
df.dtypes
Alternatively, you may use the syntax below to check the data type of a particular column in Pandas DataFrame:
df['DataFrame Column'].dtypes

Q3. How do you select rows from a Pandas DataFrame based on a condition?
Ans:
Users can select rows based on a particular column value using '>', '=', '<=', '>=', '!=' operators.
result_DataFrame = Data_Frame[Data_Frame['Percentage'] > 70]  
result_DataFrame = Data_Frame.loc[Data_Frame['Percentage'] != 71] 
result_DataFrame = Data_Frame[Data_Frame['Subjects_1'].isin(Subjects_2)] 

Q4. How do you rename columns in a Pandas DataFrame?
Ans:
One way of renaming the columns in a Pandas Dataframe is by using the rename() function.
renaming test to TEST:
pd.rename(columns = {'test':'TEST'}, inplace = True)
The columns can also be renamed by directly assigning a list containing the new names to the columns attribute of the Dataframe object for which we want to rename the columns. 
The disadvantage of this method is that we need to provide new names for all the columns even if want to rename only some of the columns. 

Q5. How do you drop columns in a Pandas DataFrame?
Ans:Using drop() function
df.drop(['column_name1', 'column_name1',.......], axis=1)

Q6. How do you find the unique values in a column of a Pandas DataFrame?
Ans:
The unique function in pandas is used to find the unique values from a series.
Syntax:
The syntax of the unique function is as follows:
pd.unique(pd.Series([2, 1, 3, 3]))
We can use it for a data frame as follows:
dataframe["column"].unique()

Q7. How do you find the number of missing values in each column of a Pandas DataFrame?
Ans:
df. isnull(). sum() will give the column-wise sum of missing values.

Q8. How do you fill missing values in a Pandas DataFrame with a specific value?
Ans:
The fillna() method replaces the NULL values with a specified value.
The fillna() method returns a new DataFrame object unless the inplace parameter is set to True, in that case the fillna() method does the replacing in the original DataFrame instead.
Syntax
dataframe.fillna(value, method, axis, inplace, limit, downcast)

Q9. How do you concatenate two Pandas DataFrames?
Ans:Use pandas.concat() to concatenate/merge two or multiple pandas DataFrames across rows or columns. 
When you concat() two pandas DataFrames on rows, it creates a new Dataframe containing all rows of two DataFrames basically it does append one DataFrame with another. 
When you use concat() on columns it performs the join operation.
By default concat() method performs append operation meaning, it appends each DataFrame at the end of the another DataFrame and creates a single DataFrame
When you use concat() to join two DataFrames, it supports only inner and outer joins and by default it performs outer join.
Using concat you can join or append multiple pandas DataFrames
new_df = pd.concat([df1, df2])

Q10. How do you merge two Pandas DataFrames on a specific column?
Ans:
We can merge two Pandas DataFrames on certain columns using the merge function by simply specifying the certain columns for merge. 
Syntax:
dataframe.merge(right, how, on, left_on, right_on, left_index, right_index, sort, suffixes, copy, indicator, validate)

Q11. How do you group data in a Pandas DataFrame by a specific column and apply an aggregation function?
Ans:

Q12. How do you pivot a Pandas DataFrame?
Ans:The pivot() function is used to reshaped a given DataFrame organized by given index / column values. 
This function does not support data aggregation, multiple values will result in a MultiIndex in the columns.

Syntax:
DataFrame.pivot(self, index=None, columns=None, values=None)
index=	Column to use to make new frame’s index. If None, uses existing index.	
columns=Column to use to make new frame’s columns.

Q13. How do you change the data type of a column in a Pandas DataFrame?
Ans:
One of the most common actions one needs to undertake when working with pandas DataFrames is data type (or dtype) casting. 
The 3distinct ways of changing the type of columns in pandas. These methods are

astype()
to_numeric()
convert_dtypes()

Using astype()
The DataFrame.astype() method is used to cast a pandas column to the specified dtype. 
Let’s suppose we want to convert column A (which is currently a string of type object) into a column holding integers. To do so, we simply need to call astype on the pandas DataFrame object and explicitly define the dtype we wish to cast the column.

df['A'] = df['A'].astype(int)
df = df.astype({"A": int, "B": str})
The dtype specified can be a buil-in Python, numpy, or pandas dtype.

Using to_numeric()
pandas.to_numeric is used to convert columns with non-numeric dtypes to the most suitable numeric time. 
For example, in order to to cast column A into int all you need to run is
df['A'] = pd.to_numeric(df['A'])

Using convert_dtypes()
convert_dtypes() method is included as of pandas version 1.0.0 and is used to convert columns to the best possible dtypes using dtypes supporting pd.NA (missing values). This means that the dtype will be determined at runtime, based on the values included in the specified column(s).

df = df.convert_dtypes()

Q14. How do you sort a Pandas DataFrame by a specific column?
Ans:In order to sort the data frame in pandas, function sort_values() is used. Pandas sort_values() can sort the data frame in Ascending or Descending order.
# Sorting by column 'Country'
df.sort_values(by=['Country'])
# Sorting by column "Population" Descending order
df.sort_values(by=['Population'], ascending=False)

Q15. How do you create a copy of a Pandas DataFrame?
Ans:The copy() method returns a copy of the DataFrame.

By default, the copy is a "deep copy" meaning that any changes made in the original DataFrame will NOT be reflected in the copy.

Q16. How do you filter rows of a Pandas DataFrame by multiple conditions?
Ans:The loc function in pandas can be used to access groups of rows or columns by label.
Add each condition you want to be included in the filtered result and concatenate them with the & operator. You'll see our code sample will return a pd.dataframe of our filtered rows.

We can use the pandas dataframe function eval inside a df[] tag to filter on these conditions. Note the .values() at the end.

Q17. How do you calculate the mean of a column in a Pandas DataFrame?
Ans: To get column average or mean from pandas DataFrame use either mean() and describe() method. The DataFrame.mean() method is used to return the mean of the values for the requested axis. If you apply this method on a series object, then it returns a scalar value, which is the mean value of all the observations in the pandas DataFrame.

Q18. How do you calculate the standard deviation of a column in a Pandas DataFrame?

Q19. How do you calculate the correlation between two columns in a Pandas DataFrame?

Q20. How do you select specific columns in a DataFrame using their labels?

Q21. How do you select specific rows in a DataFrame using their indexes?

Q22. How do you sort a DataFrame by a specific column?

Q23. How do you create a new column in a DataFrame based on the values of another column?

Q24. How do you remove duplicates from a DataFrame?

Q25. What is the difference between .loc and .iloc in Pandas?
